/* Copyright 2019 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
syntax = "proto2";

package ml_metadata;

import "ml_metadata/proto/metadata_store.proto";

message MLMDBenchConfig {
    optional ConnectionConfig mlmd_connect_config = 1;
    repeated Workload workloads = 2;
    optional ThreadEnv thread_env = 3; 
}

message UniformDistribution {
    optional int32 range_begin = 1 [default = 1];
    optional int32 range_end = 2 [default = 10];
}

message NormalDistribution {
    optional int32 coefficient_of_variation = 1 [default = 5];
}

message InitStore {
    optional ConnectionConfig mlmd_config = 1;
}

message FillTypes {
    optional bool update = 1 [default = false];
    enum Specification {
        ArtifactType = 0;
        ExecutionType = 1;
        ContextType = 2;
    }
    optional Specification specification = 2;
    optional UniformDistribution num_properties_distribution = 3;
}

message FillNodes {
    optional bool update = 1 [default = false];
    enum Specification {
        Artifact = 0;
        Execution = 1;
        Context = 2;
    }
    optional Specification specification = 2;
    optional UniformDistribution num_properties_distribution = 3;
}

message FillEdges {
    enum Specification {
        Event = 0;
        Attribution = 1;
        Association = 2;
    }
    optional Specification specification = 1;
    optional NormalDistribution bipartite_distribution1 = 2;
    optional NormalDistribution bipartite_distribution2 = 3;
}

message ReadTypes {
    enum Specification {
        ArtifactTypeByID = 0;
        ExecutionTypeByID = 1;
        ContextTypeByID = 2;
    }
    optional Specification specification = 1;
    optional UniformDistribution num_properties_distribution = 2;
}

message ReadNodes {
    enum Specification {
        ArtifactsByID = 0;
        ArtifactsByType = 1;
        ArtifactByTypeAndName = 2;
        ArtifactsByURI = 3;
        ArtifactsByContext = 4;
        ExecutionsByID = 5;
        ExecutionsByType = 6;
        ExecutionByTypeAndName = 7;
        ExecutionsByContext = 8;
        ContextsByID = 9;
        ContextsByType = 10;
        ContextByTypeAndName = 11;
        ContextsByArtifact = 12;
        ContextsByExecution = 13;
    }
    optional Specification specification = 1;
    optional UniformDistribution num_properties_distribution = 2;
}

message ReadEdges {
    enum Specification {
        EventsByExecutionIDs = 0;
        EventsByArtifactIDs = 1;
    }
    optional Specification specification = 1;
    optional NormalDistribution bipartite_distribution1 = 2;
    optional NormalDistribution bipartite_distribution2 = 3;
}

message Workload {
    oneof workloads {
        InitStore init_store = 1;
        FillTypes fill_types = 2;
        FillNodes fill_nodes = 3;
        FillEdges fill_edges = 4;
        ReadTypes read_types = 5;
        ReadNodes read_nodes = 6;
        ReadEdges read_edges = 7;
    }
}

message ThreadEnv {
    optional int32 thread_num  = 1 [default = 1];
}


message MLMDBenchReport {
    repeated WorkloadResult summaries = 1;
}

message WorkloadResult {
    optional Workload workload = 1;
    optional double microsecond_per_op = 2;
    optional double bytes_per_second = 3;
}